#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsMusteriler
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="musteriler")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmusteriler_tbl(musteriler_tbl instance);
    partial void Updatemusteriler_tbl(musteriler_tbl instance);
    partial void Deletemusteriler_tbl(musteriler_tbl instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WindowsFormsMusteriler.Properties.Settings.Default.musterilerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<musteriler_tbl> musteriler_tbls
		{
			get
			{
				return this.GetTable<musteriler_tbl>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.musteriler_tbl")]
	public partial class musteriler_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _musteriID;
		
		private string _ad;
		
		private string _soyad;
		
		private string _ulke;
		
		private string _sehir;
		
		private string _telefon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmusteriIDChanging(int value);
    partial void OnmusteriIDChanged();
    partial void OnadChanging(string value);
    partial void OnadChanged();
    partial void OnsoyadChanging(string value);
    partial void OnsoyadChanged();
    partial void OnulkeChanging(string value);
    partial void OnulkeChanged();
    partial void OnsehirChanging(string value);
    partial void OnsehirChanged();
    partial void OntelefonChanging(string value);
    partial void OntelefonChanged();
    #endregion
		
		public musteriler_tbl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_musteriID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int musteriID
		{
			get
			{
				return this._musteriID;
			}
			set
			{
				if ((this._musteriID != value))
				{
					this.OnmusteriIDChanging(value);
					this.SendPropertyChanging();
					this._musteriID = value;
					this.SendPropertyChanged("musteriID");
					this.OnmusteriIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ad", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string ad
		{
			get
			{
				return this._ad;
			}
			set
			{
				if ((this._ad != value))
				{
					this.OnadChanging(value);
					this.SendPropertyChanging();
					this._ad = value;
					this.SendPropertyChanged("ad");
					this.OnadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soyad", DbType="NVarChar(25)")]
		public string soyad
		{
			get
			{
				return this._soyad;
			}
			set
			{
				if ((this._soyad != value))
				{
					this.OnsoyadChanging(value);
					this.SendPropertyChanging();
					this._soyad = value;
					this.SendPropertyChanged("soyad");
					this.OnsoyadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ulke", DbType="NVarChar(25)")]
		public string ulke
		{
			get
			{
				return this._ulke;
			}
			set
			{
				if ((this._ulke != value))
				{
					this.OnulkeChanging(value);
					this.SendPropertyChanging();
					this._ulke = value;
					this.SendPropertyChanged("ulke");
					this.OnulkeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sehir", DbType="NVarChar(25)")]
		public string sehir
		{
			get
			{
				return this._sehir;
			}
			set
			{
				if ((this._sehir != value))
				{
					this.OnsehirChanging(value);
					this.SendPropertyChanging();
					this._sehir = value;
					this.SendPropertyChanged("sehir");
					this.OnsehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon", DbType="NChar(14)")]
		public string telefon
		{
			get
			{
				return this._telefon;
			}
			set
			{
				if ((this._telefon != value))
				{
					this.OntelefonChanging(value);
					this.SendPropertyChanging();
					this._telefon = value;
					this.SendPropertyChanged("telefon");
					this.OntelefonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
